name: CI
on: push
jobs:
  deploy:
    name: Deploy to production
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment: production
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          images: httptoolkit/testserver
          tags: |
              type=raw,value=prod,enable={{is_default_branch}}
              type=raw,value=latest,enable={{is_default_branch}}
              type=sha

      - name: Build & publish image to Docker Hub
        uses: docker/build-push-action@v4
        with:
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: VERSION=${{ github.sha }}

      - name: Redeploy site
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          sleep 10 # Wait for Docker Hub to fully publish

          # Trigger a container redeploy:
          curl "https://app.hidora.com/1.0/environment/control/rest/redeploycontainersbygroup?session=$HIDORA_API_TOKEN&envName=$ENV_NAME&nodeGroup=cp&tag=prod&useExistingVolumes=true" | \
              tee /dev/stderr | \
              grep -q 'Node has been successfully updated'
        env:
          HIDORA_API_TOKEN: ${{ secrets.HIDORA_API_TOKEN }}
          ENV_NAME: ${{ vars.HIDORA_ENV_NAME }}